---
import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import Hero from '../../../components/Hero.astro';
import PubDate from '../../../components/PubDate.astro';

export async function getStaticPaths() {
	let blogEntries = await getCollection('blog');
	blogEntries = blogEntries.filter((entry) => entry.slug.split('/')[0] === 'en');
	return blogEntries.map((entry) => ({
		params: { slug: entry.slug.split('/')[1] },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const wordCount = entry.body.split(/\s+/).filter((word) => word !== '').length;
const averageWPM = 200; // Adjust according to your audience's reading speed
const readingTime = Math.ceil(wordCount / averageWPM);
---

<Layout title={"Canada - " + entry.data.title}>
  {
    entry.data.image && entry.data.image.url ? (
      <Hero image={entry.data.image.url} alt={entry.data.image.alt} />
    ) : (
      ""
    )
  }
  {
    entry.data.image && entry.data.image.href ? (
      <Hero url={entry.data.image.href} alt={entry.data.image.alt} />
    ) : (
      ""
    )
  }
  <main class="container">
    <article class="blog-entry">
      <h1>{entry.data.title}</h1>
      <PubDate lang={Astro.currentLocale} date={entry.data.pubDate}>
        | Reading time: {readingTime}min | Written by: {
          entry.data.author
        }</PubDate
      >
      <Content />
    </article>
  </main>
</Layout>
